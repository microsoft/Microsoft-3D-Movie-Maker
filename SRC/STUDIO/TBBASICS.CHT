///////////////////////////////////////////////////////////
// Basics tables, all sound tables are help dir  
///////////////////////////////////////////////////////////
/////////////////////////////////////
// Basics callout sequence 1
/////////////////////////////////////
GOBCHUNK("Basics01 initializer", kidBasics01, kgokkNormal)
	DEFAULT_POSITION( 0, 0, 0)
ENDCHUNK
CREATE_ANIM("Basics01 Table")
	
// Init the table, then fill it up the project
	INITIALIZE_TABLE()
//				  inst 			  		return  ID0 		next  		st  ID1 				ID2
//				  ----					------	---			----		--	---					---
//1
	PROJECT_TABLE(InitState, 			NotRel, ParState2, 	NotRel, 	kFltrMouseBoth,		ktpcBasics00)
	PROJECT_TABLE(WaitEvent, 			NotRel, NotRel,		NotRel,  	NotRel, 			NotRel)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			2, 		 	cidClicked, 		kidPortfolio)
	PROJECT_TABLE(IgnoreMatch,			fFalse, 0, 			NotRel,	 	cidMouseDown, 		kidPortfolio)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			3,		 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(IgnoreChildren,		fFalse, 0, 			NotRel,	 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(MatchAllGoto,			fFalse,	NotRel, 	3,			cidMouseDown, 		NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
//2
	PROJECT_TABLE(InitState, 			NotRel, ParState2, 	NotRel,  	kFltrMouseBoth,		ktpcBasics01)
	PROJECT_TABLE(WaitEvent, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			3, 		 	cidClicked, 		kidPortsNew)
	PROJECT_TABLE(IgnoreMatch,			fFalse, 0, 			NotRel,	 	cidMouseDown, 		kidPortsNew)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			3,		 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(IgnoreChildren,		fFalse, 0, 			NotRel,	 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(MatchAllGoto,			fFalse,	NotRel, 	3,		 	cidMouseDown, 		NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
// Special(QuitHelp)
//3
	PROJECT_TABLE(SpecialInstr, 		fFalse,	NotRel, 	NotRel,  	QuitHelp, 			NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
// *End of the table*
	PROJECT_TABLE(EndTable,0,0,0,0,0)	// End of File

	// Calculate the states, build our NextState jump table, then run this thingy
	RunScriptGob(kidSequenceParent, kchidScript5);
	RunScriptGob(kidSequenceParent, kchidScript2);
	RunScriptGob(kidSequenceParent, kchidScript1);
	DestroyThis();
ENDCHUNK																							  

/////////////////////////////////////
// basics callout sequence 2
/////////////////////////////////////
GOBCHUNK("Basics02 initializer", kidBasics02, kgokkNormal)
	DEFAULT_POSITION( 0, 0, 0)
ENDCHUNK
CREATE_ANIM("Basics02 Table")
	
// Init the table, then fill it up the project
	INITIALIZE_TABLE()
//				  inst 			  		return  ID0 		next  		st  ID1 				ID2
//				  ----					------	---			----		--	---					---
//1
	PROJECT_TABLE(InitState, 			NotRel, ParState2, 	NotRel,  	kFltrMouseBoth,		ktpcBasics02)
	PROJECT_TABLE(WaitEvent, 			NotRel, NotRel,		NotRel,  	NotRel, 			NotRel)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			2, 		 	cidClicked, 		kidPortfolio)
	PROJECT_TABLE(IgnoreMatch,			fFalse, 0, 			NotRel,	 	cidMouseDown, 		kidPortfolio)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			3,		 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(IgnoreChildren,		fFalse, 0, 			NotRel,	 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(MatchAllGoto,			fFalse,	NotRel, 	3,			cidMouseDown, 		NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
//2
	PROJECT_TABLE(InitState, 			NotRel, ParState2, 	NotRel, 	kFltrMouseBoth,		ktpcBasics03)
	PROJECT_TABLE(WaitEvent, 			NotRel, NotRel,		NotRel,  	NotRel, 			NotRel)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			3, 		 	cidClicked, 		kidPortsPortfolio)
	PROJECT_TABLE(IgnoreMatch,			fFalse, 0, 			NotRel,	 	cidMouseDown, 		kidPortsPortfolio)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			3,		 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(IgnoreChildren,		fFalse, 0, 			NotRel,	 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(MatchAllGoto,			fFalse,	NotRel, 	3,			cidMouseDown, 		NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
// Special(QuitHelp)
//3
	PROJECT_TABLE(SpecialInstr, 		fFalse,	NotRel, 	NotRel,  	QuitHelp, 			NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
// *End of the table*
	PROJECT_TABLE(EndTable,0,0,0,0,0)	// End of File

	// Calculate the states, build our NextState jump table, then run this thingy
	RunScriptGob(kidSequenceParent, kchidScript5);
	RunScriptGob(kidSequenceParent, kchidScript2);
	RunScriptGob(kidSequenceParent, kchidScript1);
	DestroyThis();
ENDCHUNK

/////////////////////////////////////
// basics callout sequence 3
/////////////////////////////////////
GOBCHUNK("Basics03 initializer", kidBasics03, kgokkNormal)
	DEFAULT_POSITION( 0, 0, 0)
ENDCHUNK
CREATE_ANIM("Basics03 Table")
	
// Init the table, then fill it up the project
	INITIALIZE_TABLE()
//				  inst 			  		return  ID0 		next  		st  ID1 				ID2
//				  ----					------	---			----		--	---					---
//1
	PROJECT_TABLE(BoolCondGoto,			NotRel, NotRel,	 	2,	 		kidBackground->fEnableSceneTools,	fTrue)
	PROJECT_TABLE(InitState, 			NotRel, ParState2, 	NotRel,  	kFltrMouse,			No_Scene)
	PROJECT_TABLE(WaitEvent, 			NotRel, NotRel,		NotRel,  	NotRel, 			NotRel)
	PROJECT_TABLE(MatchAllGoto,			fFalse,	NotRel, 	4,			cidMouseDown, 		NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
//2
	PROJECT_TABLE(InitState, 			NotRel, ParState2, 	NotRel,  	kFltrMouseBoth,		ktpcBasics04)
	PROJECT_TABLE(WaitEvent, 			NotRel, NotRel,		NotRel,  	NotRel, 			NotRel)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			3, 		 	cidClicked, 		kidPortfolio)
	PROJECT_TABLE(IgnoreMatch,			fFalse, 0, 			NotRel,	 	cidMouseDown, 		kidPortfolio)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			4,		 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(IgnoreChildren,		fFalse, 0, 			NotRel,	 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(MatchAllGoto,			fFalse,	NotRel, 	4,			cidMouseDown, 		NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
//3
	PROJECT_TABLE(InitState, 			NotRel, ParState2, 	NotRel, 	kFltrMouseBoth,		ktpcBasics05)
	PROJECT_TABLE(WaitEvent, 			NotRel, NotRel,		NotRel,  	NotRel, 			NotRel)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			4, 		 	cidClicked, 		kidPortsSave)
	PROJECT_TABLE(IgnoreMatch,			fFalse, 0, 			NotRel,	 	cidMouseDown, 		kidPortsSave)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			4,		 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(IgnoreChildren,		fFalse, 0, 			NotRel,	 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(MatchAllGoto,			fFalse,	NotRel, 	4,			cidMouseDown, 		NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
// Special(QuitHelp)
//4
	PROJECT_TABLE(SpecialInstr, 		fFalse,	NotRel, 	NotRel,  	QuitHelp, 			NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
// *End of the table*
	PROJECT_TABLE(EndTable,0,0,0,0,0)	// End of File

	// Calculate the states, build our NextState jump table, then run this thingy
	RunScriptGob(kidSequenceParent, kchidScript5);
	RunScriptGob(kidSequenceParent, kchidScript2);
	RunScriptGob(kidSequenceParent, kchidScript1);
	DestroyThis();
ENDCHUNK

/////////////////////////////////////
// basics callout sequence 4
/////////////////////////////////////
GOBCHUNK("Basics04 initializer", kidBasics04, kgokkNormal)
	DEFAULT_POSITION( 0, 0, 0)
ENDCHUNK
CREATE_ANIM("Basics04 Table")
	
// Init the table, then fill it up the project
	INITIALIZE_TABLE()
//				  inst 			  		return  ID0 		next  		st  ID1 				ID2
//				  ----					------	---			----		--	---					---
//1
	PROJECT_TABLE(BoolCondGoto,			NotRel, NotRel,	 	2,	 		kidBackground->fEnableSceneTools,	fTrue)
	PROJECT_TABLE(InitState, 			NotRel, ParState2, 	NotRel,  	kFltrMouse,			No_Scene)
	PROJECT_TABLE(WaitEvent, 			NotRel, NotRel,		NotRel,  	NotRel, 			NotRel)
	PROJECT_TABLE(MatchAllGoto,			fFalse,	NotRel, 	4,			cidMouseDown, 		NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
//2
	PROJECT_TABLE(InitState, 			NotRel, ParState2, 	NotRel,  	kFltrMouseBoth,		ktpcBasics06)
	PROJECT_TABLE(WaitEvent, 			NotRel, NotRel,		NotRel,  	NotRel, 			NotRel)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			3, 		 	cidClicked, 		kidPortfolio)
	PROJECT_TABLE(IgnoreMatch,			fFalse, 0, 			NotRel,	 	cidMouseDown, 		kidPortfolio)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			4,		 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(IgnoreChildren,		fFalse, 0, 			NotRel,	 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(MatchAllGoto,			fFalse,	NotRel, 	4,			cidMouseDown, 		NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
//3
	PROJECT_TABLE(InitState, 			NotRel, ParState2, 	NotRel, 	kFltrMouseBoth,		ktpcBasics07)
	PROJECT_TABLE(WaitEvent, 			NotRel, NotRel,		NotRel,  	NotRel, 			NotRel)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			4, 		 	cidClicked, 		kidPortsSaveAs)
	PROJECT_TABLE(IgnoreMatch,			fFalse, 0, 			NotRel,	 	cidMouseDown, 		kidPortsSaveAs)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			4,		 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(IgnoreChildren,		fFalse, 0, 			NotRel,	 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(MatchAllGoto,			fFalse,	NotRel, 	4,			cidMouseDown, 		NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
// Special(QuitHelp)
//4
	PROJECT_TABLE(SpecialInstr, 		fFalse,	NotRel, 	NotRel,  	QuitHelp, 			NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
// *End of the table*
	PROJECT_TABLE(EndTable,0,0,0,0,0)	// End of File

	// Calculate the states, build our NextState jump table, then run this thingy
	RunScriptGob(kidSequenceParent, kchidScript5);
	RunScriptGob(kidSequenceParent, kchidScript2);
	RunScriptGob(kidSequenceParent, kchidScript1);
	DestroyThis();
ENDCHUNK

/////////////////////////////////////
// basics callout sequence 5
/////////////////////////////////////
GOBCHUNK("Basics05 initializer", kidBasics05, kgokkNormal)
	DEFAULT_POSITION( 0, 0, 0)
ENDCHUNK
CREATE_ANIM("Basics05 Table")
	
// Init the table, then fill it up the project
	INITIALIZE_TABLE()
//				  inst 			  		return  ID0 		next  		st  ID1 				ID2
//				  ----					------	---			----		--	---					---
//1
	PROJECT_TABLE(InitState, 			NotRel, ParState2, 	NotRel,  	kFltrMouse|kFltrKey, 	ktpcBasics08)
	PROJECT_TABLE(WaitEvent, 			NotRel, NotRel,		NotRel,  	NotRel, 			NotRel)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			2,		 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(IgnoreChildren,		fFalse, 0, 			NotRel,	 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(MatchAllGoto,			fFalse,	NotRel, 	2,			cidMouseDown, 		NotRel)
	PROJECT_TABLE(MatchAllGoto,			fFalse,	NotRel, 	2,			cidKey,		 		NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
// Special(QuitHelp)
//2
	PROJECT_TABLE(SpecialInstr, 		fFalse,	NotRel, 	NotRel,  	QuitHelp, 			NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
// *End of the table*
	PROJECT_TABLE(EndTable,0,0,0,0,0)	// End of File

	// Calculate the states, build our NextState jump table, then run this thingy
	RunScriptGob(kidSequenceParent, kchidScript5);
	RunScriptGob(kidSequenceParent, kchidScript2);
	RunScriptGob(kidSequenceParent, kchidScript1);
	DestroyThis();
ENDCHUNK

/////////////////////////////////////
// basics callout sequence 6
/////////////////////////////////////
GOBCHUNK("Basics06 initializer", kidBasics06, kgokkNormal)
	DEFAULT_POSITION( 0, 0, 0)
ENDCHUNK
CREATE_ANIM("Basics06 Table")
	
// Init the table, then fill it up the project
	INITIALIZE_TABLE()
//				  inst 			  		return  ID0 		next  		st  ID1 				ID2
//				  ----					------	---			----		--	---					---
//1
	PROJECT_TABLE(InitState, 			NotRel, ParState2, 	NotRel,  	kFltrMouse,			ktpcBasics0A)
	PROJECT_TABLE(WaitEvent, 			NotRel, NotRel,		NotRel,  	NotRel, 			NotRel)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			2,		 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(IgnoreChildren,		fFalse, 0, 			NotRel,	 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(MatchAllGoto,			fFalse,	NotRel, 	2,			cidMouseDown, 		NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
// Special(QuitHelp)
//2
	PROJECT_TABLE(SpecialInstr, 		fFalse,	NotRel, 	NotRel,  	QuitHelp, 			NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
// *End of the table*
	PROJECT_TABLE(EndTable,0,0,0,0,0)	// End of File

	// Calculate the states, build our NextState jump table, then run this thingy
	RunScriptGob(kidSequenceParent, kchidScript5);
	RunScriptGob(kidSequenceParent, kchidScript2);
	RunScriptGob(kidSequenceParent, kchidScript1);
	DestroyThis();
ENDCHUNK

/////////////////////////////////////
// basics callout sequence 7
/////////////////////////////////////
GOBCHUNK("Basics07 initializer", kidBasics07, kgokkNormal)
	DEFAULT_POSITION( 0, 0, 0)
ENDCHUNK
CREATE_ANIM("Basics07 Table")
	
// Init the table, then fill it up the project
	INITIALIZE_TABLE()
//				  inst 			  		return  ID0 		next  		st  ID1 				ID2
//				  ----					------	---			----		--	---					---
//1
	PROJECT_TABLE(InitState, 			NotRel, ParState2, 	NotRel,  	kFltrMouseBoth,		ktpcBasics0C)
	PROJECT_TABLE(WaitEvent, 			NotRel, NotRel,		NotRel,  	NotRel, 			NotRel)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			2, 		 	cidClicked, 		kidBook)
	PROJECT_TABLE(IgnoreMatch,			fFalse, 0, 			NotRel,	 	cidMouseDown, 		kidBook)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			4,		 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(IgnoreChildren,		fFalse, 0, 			NotRel,	 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(MatchAllGoto,			fFalse,	NotRel, 	4,			cidMouseDown, 		NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
//2
	PROJECT_TABLE(InitState, 			NotRel, ParState2, 	NotRel, 	kFltrMouseBoth,		ktpcBasics0D)
	PROJECT_TABLE(WaitEvent, 			NotRel, NotRel,		NotRel,  	NotRel, 			NotRel)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			3, 		 	cidClicked, 		kgobHelpBookVoice)
	PROJECT_TABLE(IgnoreMatch,			fFalse, 0, 			NotRel,	 	cidMouseDown, 		kgobHelpBookVoice)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			4,		 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(IgnoreChildren,		fFalse, 0, 			NotRel,	 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(MatchAllGoto,			fFalse,	NotRel, 	4,			cidMouseDown, 		NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
//3
	PROJECT_TABLE(InitState, 			NotRel, ParState2, 	NotRel, 	kFltrMouseBoth,		ktpcBasics10)
	PROJECT_TABLE(WaitEvent, 			NotRel, NotRel,		NotRel,  	NotRel, 			NotRel)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			4, 		 	cidClicked, 		kgobHelpBookCancel)
	PROJECT_TABLE(IgnoreMatch,			fFalse, 0, 			NotRel,	 	cidMouseDown, 		kgobHelpBookCancel)
	PROJECT_TABLE(IgnoreMatch,			fFalse, 0, 			NotRel,	 	cidClicked, 		kgobHelpBookVoice)
	PROJECT_TABLE(IgnoreMatch,			fFalse, 0, 			NotRel,	 	cidMouseDown, 		kgobHelpBookVoice)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			4,		 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(IgnoreChildren,		fFalse, 0, 			NotRel,	 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(MatchAllGoto,			fFalse,	NotRel, 	4,			cidMouseDown, 		NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
// Special(QuitHelp)
//4
	PROJECT_TABLE(SpecialInstr, 		fFalse,	NotRel, 	NotRel,  	QuitHelp, 			NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
// *End of the table*
	PROJECT_TABLE(EndTable,0,0,0,0,0)	// End of File

	// Calculate the states, build our NextState jump table, then run this thingy
	RunScriptGob(kidSequenceParent, kchidScript5);
	RunScriptGob(kidSequenceParent, kchidScript2);
	RunScriptGob(kidSequenceParent, kchidScript1);
	DestroyThis();
ENDCHUNK

/////////////////////////////////////
// basics callout sequence 8
/////////////////////////////////////
GOBCHUNK("Basics08 initializer", kidBasics08, kgokkNormal)
	DEFAULT_POSITION( 0, 0, 0)
ENDCHUNK
CREATE_ANIM("Basics08 Table")
	
// Init the table, then fill it up the project
	INITIALIZE_TABLE()
//				  inst 			  		return  ID0 		next  		st  ID1 				ID2
//				  ----					------	---			----		--	---					---
//1
	PROJECT_TABLE(InitState, 			NotRel, ParState2, 	NotRel,  	kFltrMouseBoth,		ktpcBasics0E)
	PROJECT_TABLE(WaitEvent, 			NotRel, NotRel,		NotRel,  	NotRel, 			NotRel)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			2, 		 	cidClicked, 		kidMap)
	PROJECT_TABLE(IgnoreMatch,			fFalse, 0, 			NotRel,	 	cidMouseDown, 		kidMap)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			2,		 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(IgnoreChildren,		fFalse, 0, 			NotRel,	 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(MatchAllGoto,			fFalse,	NotRel, 	2,			cidMouseDown, 		NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
// Special(QuitHelp)
//2
	PROJECT_TABLE(SpecialInstr, 		fFalse,	NotRel, 	NotRel,  	QuitHelp, 			NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
// *End of the table*
	PROJECT_TABLE(EndTable,0,0,0,0,0)	// End of File

	// Calculate the states, build our NextState jump table, then run this thingy
	RunScriptGob(kidSequenceParent, kchidScript5);
	RunScriptGob(kidSequenceParent, kchidScript2);
	RunScriptGob(kidSequenceParent, kchidScript1);
	DestroyThis();
ENDCHUNK

/////////////////////////////////////
// basics callout sequence 9
/////////////////////////////////////
GOBCHUNK("Basics09 initializer", kidBasics09, kgokkNormal)
	DEFAULT_POSITION( 0, 0, 0)
ENDCHUNK
CREATE_ANIM("Basics09 Table")
	
// Init the table, then fill it up the project
	INITIALIZE_TABLE()
//				  inst 			  		return  ID0 		next  		st  ID1 				ID2
//				  ----					------	---			----		--	---					---
//1
	PROJECT_TABLE(InitState, 			NotRel, ParState2, 	NotRel,  	kFltrMouseBoth,		ktpcBasics0F)
	PROJECT_TABLE(WaitEvent, 			NotRel, NotRel,		NotRel,  	NotRel, 			NotRel)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			2, 		 	cidClicked, 		kidExit)
	PROJECT_TABLE(IgnoreMatch,			fFalse, 0, 			NotRel,	 	cidMouseDown, 		kidExit)
	PROJECT_TABLE(MatchGoto,			fFalse, 0, 			2,		 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(IgnoreChildren,		fFalse, 0, 			NotRel,	 	cidMouseDown, 		kgobHowtoSequence)
	PROJECT_TABLE(MatchAllGoto,			fFalse,	NotRel, 	2,			cidMouseDown, 		NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
// Special(QuitHelp)
//2
	PROJECT_TABLE(SpecialInstr, 		fFalse,	NotRel, 	NotRel,  	QuitHelp, 			NotRel)
	PROJECT_TABLE(EndState, 			NotRel, NotRel, 	NotRel,  	NotRel, 			NotRel)
// *End of the table*
	PROJECT_TABLE(EndTable,0,0,0,0,0)	// End of File

	// Calculate the states, build our NextState jump table, then run this thingy
	RunScriptGob(kidSequenceParent, kchidScript5);
	RunScriptGob(kidSequenceParent, kchidScript2);
	RunScriptGob(kidSequenceParent, kchidScript1);
	DestroyThis();
ENDCHUNK

